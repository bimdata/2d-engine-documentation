(self.webpackChunkdocumentation_2d_engine=self.webpackChunkdocumentation_2d_engine||[]).push([[953],{491:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-22a2f9fd",path:"/reference/",title:"Reference",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Init factory",slug:"init-factory",children:[]},{level:2,title:"Scene",slug:"scene",children:[{level:3,title:"Events",slug:"events",children:[]}]},{level:2,title:"Styles",slug:"styles",children:[]},{level:2,title:"Texture Manager",slug:"texture-manager",children:[]},{level:2,title:"Model and Objects",slug:"model-and-objects",children:[{level:3,title:"Model",slug:"model",children:[]},{level:3,title:"Object",slug:"object",children:[]},{level:3,title:"Geometry",slug:"geometry",children:[]},{level:3,title:"Positionable & Transformable",slug:"positionable-transformable",children:[]}]},{level:2,title:"UI",slug:"ui",children:[{level:3,title:"Events",slug:"events-1",children:[]}]},{level:2,title:"Camera",slug:"camera",children:[]},{level:2,title:"Picker",slug:"picker",children:[]},{level:2,title:"Snapper",slug:"snapper",children:[]},{level:2,title:"Settings",slug:"settings",children:[]},{level:2,title:"Ticker",slug:"ticker",children:[]},{level:2,title:"Renderer",slug:"renderer",children:[]},{level:2,title:"Vector2DUtils",slug:"vector2dutils",children:[]}],filePathRelative:"reference/README.md",git:{updatedTime:164249574e4,contributors:[]}}},164:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>x});var e=a(252);const p=(0,e.uE)('<h1 id="reference"><a class="header-anchor" href="#reference">#</a> Reference</h1><h2 id="init-factory"><a class="header-anchor" href="#init-factory">#</a> Init factory</h2><p>2D Engine is created using a factory you get as default export from the package:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> makeViewer <span class="token keyword">from</span> <span class="token string">&quot;@bimdata/2d-engine&quot;</span><span class="token punctuation">;</span> <span class="token comment">// webpack / rollup</span>\n\n<span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> viewer <span class="token operator">=</span> <span class="token function">makeViewer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> canvas <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>canvas</code> is mandatory and another properties can be passed to customized the 2D Engine behavior:</p><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>canvas</code></td><td style="text-align:left;"><code>HTMLCanvasElement</code></td><td style="text-align:left;"><strong>Required</strong>.</td></tr><tr><td style="text-align:left;"><code>autoStart</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><strong>Default</strong> = <code>true</code>. If false, you must call <code>viewer.ticker.start()</code> to start rendering.</td></tr><tr><td style="text-align:left;"><code>select</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><strong>Default</strong> = <code>true</code>. If false, disabled the <code>select</code> layer.</td></tr><tr><td style="text-align:left;"><code>highlight</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><strong>Default</strong> = <code>true</code>. If false, disabled the <code>highlight</code> layer.</td></tr><tr><td style="text-align:left;"><code>picking</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><strong>Default</strong> = <code>true</code>. If false, disabled the <code>picking</code> layer.</td></tr><tr><td style="text-align:left;"><code>snap</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><strong>Default</strong> = <code>true</code>. If false, disabled the <code>snap</code> layer.</td></tr></tbody></table><p>The factory returns the <code>viewer</code> with the following interface:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Viewer</span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> canvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> scene<span class="token operator">:</span> Scene<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> camera<span class="token operator">:</span> Camera<span class="token punctuation">;</span>\n  <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> renderer<span class="token operator">:</span> Renderer<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> textureManager<span class="token operator">:</span> TextureManager<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> styles<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> Style<span class="token punctuation">;</span> selected<span class="token operator">:</span> Style<span class="token punctuation">;</span> highlight<span class="token operator">:</span> Style <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> settings<span class="token operator">:</span> Settings<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> constants<span class="token operator">:</span> Constants<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> picker<span class="token operator">:</span> Picker<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> snapper<span class="token operator">:</span> Snapper<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> ticker<span class="token operator">:</span> Ticker<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> ui<span class="token operator">:</span> <span class="token constant">UI</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> utils<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token keyword">readonly</span> vector2D<span class="token operator">:</span> Vector2DUtils<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="scene"><a class="header-anchor" href="#scene">#</a> Scene</h2><p>The viewer scene is where model and objects lives. You can add/remove models and objects and getters and setters allow read/write objects in batch.</p><p>It has the following interface:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Scene</span> <span class="token keyword">extends</span> <span class="token class-name">Readonly<span class="token operator">&lt;</span>EventHandler<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> viewer<span class="token operator">:</span> Viewer<span class="token punctuation">;</span>\n\n  <span class="token comment">// Models</span>\n  <span class="token keyword">readonly</span> models<span class="token operator">:</span> Model<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> modelsMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> Model<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  <span class="token function">addModel</span><span class="token punctuation">(</span>modelData<span class="token operator">:</span> ModelData<span class="token punctuation">)</span><span class="token operator">:</span> Model<span class="token punctuation">;</span>\n  <span class="token function">removeModel</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Objects</span>\n  <span class="token keyword">readonly</span> objects<span class="token operator">:</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> objectsMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> SceneObject<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  <span class="token function">addObject</span><span class="token punctuation">(</span>objectData<span class="token operator">:</span> SceneObjectData<span class="token punctuation">,</span> model<span class="token operator">?</span><span class="token operator">:</span> Model<span class="token punctuation">)</span><span class="token operator">:</span> SceneObject<span class="token punctuation">;</span>\n  <span class="token function">removeObject</span><span class="token punctuation">(</span>objectId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Objects setters</span>\n  <span class="token function">showObjects</span><span class="token punctuation">(</span>ids<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">hideObjects</span><span class="token punctuation">(</span>ids<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">selectObjects</span><span class="token punctuation">(</span>ids<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">deselectObjects</span><span class="token punctuation">(</span>ids<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">highlightObjects</span><span class="token punctuation">(</span>ids<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">unhighlightObjects</span><span class="token punctuation">(</span>ids<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">setObjectsPickable</span><span class="token punctuation">(</span>ids<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">setObjectsUnpickable</span><span class="token punctuation">(</span>ids<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Object getters</span>\n  <span class="token keyword">readonly</span> shownObjects<span class="token operator">:</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> hiddenObjects<span class="token operator">:</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> selectedObjects<span class="token operator">:</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> unselectedObjects<span class="token operator">:</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> highlightedObjects<span class="token operator">:</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> unhighlightedObjects<span class="token operator">:</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> pickableObjects<span class="token operator">:</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> unpickableObjects<span class="token operator">:</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h3 id="events"><a class="header-anchor" href="#events">#</a> Events</h3><p>The following events are emitted by the 2D Engine scene :</p><ul><li>&quot;model-added&quot;, payload: the added model.</li><li>&quot;model-removed&quot;, payload: the removed model.</li><li>&quot;object-added&quot;, payload: the added object.</li><li>&quot;object-removed&quot;, payload: the removed object.</li><li>&quot;object-update&quot;, payload: { object, property, value?, oldValue? }. No value and oldValue for the &quot;geometry&quot; property.</li></ul><p>Events can be listened using <code>scene.on</code>:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;model-added&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">model</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">A model is loaded with the id </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>model<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="styles"><a class="header-anchor" href="#styles">#</a> Styles</h2><p>Styles define how objects are drawn by default when they are visible, selected and highlighted. It can be customized by changing the default styles (WARNING: updating styles.default won&#39;t affect already loaded objects) or loading objects with non default style.</p><p>A style has the following interface:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Style</span> <span class="token punctuation">{</span>\n  <span class="token comment">// TEXTURE</span>\n  texture<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  textureTint<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  textureOpacity<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token comment">// LINE</span>\n  lineWidth<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  lineColor<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  lineOpacity<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  lineDash<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  lineCap<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">LINE_CAP</span><span class="token punctuation">;</span>\n  lineJoin<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">LINE_JOIN</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">enum</span> <span class="token constant">LINE_CAP</span> <span class="token punctuation">{</span>\n  <span class="token constant">BUTT</span><span class="token punctuation">,</span>\n  <span class="token constant">ROUND</span><span class="token punctuation">,</span>\n  <span class="token constant">SQUARE</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">enum</span> <span class="token constant">LINE_JOIN</span> <span class="token punctuation">{</span>\n  <span class="token constant">BEVEL</span><span class="token punctuation">,</span>\n  <span class="token constant">MITER</span><span class="token punctuation">,</span>\n  <span class="token constant">ROUND</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>You can change <code>textureTint</code> and <code>lineColor</code> using hexadecimal numbers.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>styles<span class="token punctuation">.</span>default<span class="token punctuation">.</span>textureTint <span class="token operator">=</span> <span class="token number">0xff0000</span><span class="token punctuation">;</span> <span class="token comment">// For red. (RGB)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>textureOpacity</code> and <code>lineOpacity</code> are numbers between 0 and 1.</p>',24),t=(0,e.Wm)("code",null,"lineDash",-1),o=(0,e.Uk)(" is an array of numbers describing the dash pattern you want to use. See "),c={href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#parameters",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("here"),r=(0,e.Uk)(" for more informations."),u=(0,e.uE)('<h2 id="texture-manager"><a class="header-anchor" href="#texture-manager">#</a> Texture Manager</h2><p>The Texture Manager has the following interface:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">TextureManager</span> <span class="token punctuation">{</span>\n  textureMatrix<span class="token operator">:</span> TextureMatrix<span class="token punctuation">;</span>\n  <span class="token function">load</span><span class="token punctuation">(</span>\n    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n    src<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n    width<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>\n    height<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token punctuation">)</span><span class="token operator">:</span> Nullable<span class="token operator">&lt;</span>Object<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// and the interface of the texture matrix</span>\n<span class="token keyword">interface</span> <span class="token class-name">TextureMatrix</span> <span class="token punctuation">{</span>\n  <span class="token function">rotate</span><span class="token punctuation">(</span>angle<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">scale</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">translate</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>The viewer only have &quot;solid&quot; texture built in but it is possible to load more:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">await</span> viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>textureManager<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>\n  <span class="token string">&quot;myTextureName&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;./my/textures/folder/myTexture.png&quot;</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>NOTE: this is async code and must be awaited in order to the texture to ba available in the viewer.</p><p>This is what you can get: (wall are textured using a cross hatch texture)</p>',7),i=(0,e.uE)('<p>Notice that the textrure is aligned with the axis. If the model is not aligned with the axis, you can use the Texture Manager textureMatrix to rotate the textures.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>textureManager<span class="token punctuation">.</span>textureMatrix<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),k=(0,e.uE)('<h2 id="model-and-objects"><a class="header-anchor" href="#model-and-objects">#</a> Model and Objects</h2><h3 id="model"><a class="header-anchor" href="#model">#</a> Model</h3><p>To add a model to the scene, use the <code>scene.addModel(modelData: ModelData)</code> method.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ModelData</span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> objects<span class="token operator">?</span><span class="token operator">:</span> SceneObjectData<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Model</span> <span class="token keyword">extends</span> <span class="token class-name">Positionable</span><span class="token punctuation">,</span> Transformable <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> scene<span class="token operator">:</span> Scene<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> objects<span class="token operator">:</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token function">addObject</span><span class="token punctuation">(</span>objectData<span class="token operator">:</span> SceneObjectData<span class="token punctuation">)</span><span class="token operator">:</span> SceneObject<span class="token punctuation">;</span>\n  <span class="token function">removeObject</span><span class="token punctuation">(</span>objectId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="object"><a class="header-anchor" href="#object">#</a> Object</h3><p>To add object to the scene, you can use the <code>scene.addObject(objectData: ObjectData)</code> or the <code>model.addObject(objectData: ObjectData)</code> methods, or add it through models.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">SceneObjectData</span> <span class="token keyword">extends</span> <span class="token class-name">Style</span> <span class="token punctuation">{</span>\n  visible<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  selected<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  highlighted<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  pickable<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> zIndex<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> pickingZIndex<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> geometry<span class="token operator">?</span><span class="token operator">:</span> GeometryData<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">SceneObject</span> <span class="token keyword">extends</span> <span class="token class-name">Style</span><span class="token punctuation">,</span> Positionable<span class="token punctuation">,</span> Transformable <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> scene<span class="token operator">:</span> Scene<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> model<span class="token operator">:</span> Model<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> geometry<span class="token operator">:</span> Geometry<span class="token punctuation">;</span>\n\n  <span class="token comment">// Scene state properties</span>\n  visible<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  selected<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  highlighted<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  pickable<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>Objects extends the <a href="#styles"><code>Style</code></a> interface. Each object style properties can be updated on the fly leading to a new render.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>object<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="geometry"><a class="header-anchor" href="#geometry">#</a> Geometry</h3><p>Objects have <code>geometry</code> and a <code>geometry</code> is an array of <code>shape</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">GeometryData</span> <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> LineData <span class="token operator">|</span> ArcData <span class="token operator">|</span> CurveData<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">ShapeData</span> <span class="token punctuation">{</span>\n  <span class="token keyword">type</span><span class="token operator">?</span><span class="token operator">:</span> ShapeType<span class="token punctuation">;</span>\n  closePath<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// If true, the path is closed after this shape and another path is opened for the following shapes. Equivalent of the svg command &quot;Z&quot;.</span>\n  startPath<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// If true, a new path is started before drawing this shape.Equivalent of the svg command &quot;M&quot;.</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Geometry</span> <span class="token keyword">extends</span> <span class="token class-name">Positionable</span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> shapes<span class="token operator">:</span> Shape<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token function">getShape</span><span class="token punctuation">(</span>index<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Shape <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n  <span class="token function">addShape</span><span class="token punctuation">(</span>shape<span class="token operator">:</span> ShapeData <span class="token operator">|</span> PointsData<span class="token punctuation">,</span> index<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Shape<span class="token punctuation">;</span>\n  <span class="token function">removeShape</span><span class="token punctuation">(</span>index<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Shape <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="path-api"><a class="header-anchor" href="#path-api">#</a> Path API</h4><p>By default, each shapes are drawn like a single path (linked together without stoping the drawing line). But this behaviour can be changed using the <code>startPath</code> and <code>closePath</code> booleans. The default value for <code>startPath</code> is <code>false</code> except for the first shape and the shapes that followed a shape with <code>closePath</code> at <code>true</code>. The default value for <code>closePath</code> is <code>false</code>.</p><p>Here is an example of these APIs.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> object <span class="token operator">=</span>  <span class="token punctuation">{</span>\n  geometry<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span>\n      points<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      startPath<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span>\n      points<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      startPath<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span>\n      points<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      startPath<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&quot;arc&quot;</span><span class="token punctuation">,</span>\n      x<span class="token operator">:</span> <span class="token number">350</span><span class="token punctuation">,</span>\n      y<span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>\n      radius<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n      startPath<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      closePath<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  texture<span class="token operator">:</span> <span class="token string">&quot;solid&quot;</span><span class="token punctuation">,</span>\n  textureTint<span class="token operator">:</span> <span class="token number">0xff0000</span><span class="token punctuation">,</span>\n  textureOpacity<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>This object is drawn like this:</p>',17),b=(0,e.Wm)("p",null,[(0,e.Uk)("If the "),(0,e.Wm)("code",null,"startPath"),(0,e.Uk)(" propertiy is removed:")],-1),d=(0,e.uE)('<p>In this example, the <code>closePath</code> property helps the drawing engine to correctly close the cirle.</p><h4 id="add-geometry"><a class="header-anchor" href="#add-geometry">#</a> Add geometry</h4><p>When adding objects on a scene, shapes can be provide to object using the geometry property. By default, array of numbers will be displayed as lines.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> model <span class="token operator">=</span> viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span><span class="token function">addModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  objects<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      geometry<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// a line</span>\n        <span class="token punctuation">{</span>\n          type<span class="token operator">:</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span> <span class="token comment">// another line</span>\n          points<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token comment">// poly: true // if poly = true, the shape is closed between the last point and the first.</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          type<span class="token operator">:</span> <span class="token string">&quot;arc&quot;</span><span class="token punctuation">,</span> <span class="token comment">// a default arc =&gt; full circle</span>\n          x<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n          y<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n          radius<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>',4),m={class:"custom-container tip"},h=(0,e.Wm)("p",{class:"custom-container-title"},"TIP",-1),y=(0,e.Uk)("Geometries can be edited on the fly. To see how, "),g={href:"https://codepen.io/kurtil/pen/qBXjRqK",target:"_blank",rel:"noopener noreferrer"},v=(0,e.Uk)("try it here"),f=(0,e.Uk)("."),w=(0,e.uE)('<p>The viewer handle three shape types: <code>line</code>, <code>arc</code> and <code>curve</code>.</p><h4 id="line"><a class="header-anchor" href="#line">#</a> Line</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">LineData</span> <span class="token keyword">extends</span> <span class="token class-name">ShapeData</span> <span class="token punctuation">{</span>\n  <span class="token keyword">type</span><span class="token operator">:</span> ShapeType<span class="token punctuation">.</span>line<span class="token punctuation">;</span>\n  points<span class="token operator">:</span> PointsData<span class="token punctuation">;</span>\n  poly<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Line</span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> <span class="token keyword">type</span><span class="token operator">:</span> ShapeType<span class="token punctuation">.</span>line<span class="token punctuation">;</span>\n  <span class="token keyword">readonly</span> points<span class="token operator">:</span> Point<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token function">getPoint</span><span class="token punctuation">(</span>index<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Point <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n  <span class="token function">addPoint</span><span class="token punctuation">(</span>point<span class="token operator">:</span> Point<span class="token punctuation">,</span> index<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Point<span class="token punctuation">;</span>\n  <span class="token function">removePoint</span><span class="token punctuation">(</span>index<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Point <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="arc"><a class="header-anchor" href="#arc">#</a> Arc</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ArcData</span> <span class="token keyword">extends</span> <span class="token class-name">ShapeData</span> <span class="token punctuation">{</span>\n  <span class="token keyword">type</span><span class="token operator">:</span> ShapeType<span class="token punctuation">.</span>arc<span class="token punctuation">;</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  startAngle<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// (0 is at the 3 o&#39;clock position of the arc&#39;s circle)</span>\n  endAngle<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  anticlockwise<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  composite<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// default to `false`, `true` to be linked with the previous shape.</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Arc</span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> <span class="token keyword">type</span><span class="token operator">:</span> ShapeType<span class="token punctuation">.</span>arc<span class="token punctuation">;</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  startAngle<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// Degrees from the right of the arc.</span>\n  endAngle<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// Degrees from the right of the arc.</span>\n  anticlockwise<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="curve"><a class="header-anchor" href="#curve">#</a> Curve</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">CurveData</span> <span class="token keyword">extends</span> <span class="token class-name">ShapeData</span> <span class="token punctuation">{</span>\n  <span class="token keyword">type</span><span class="token operator">:</span> ShapeType<span class="token punctuation">.</span>curve<span class="token punctuation">;</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  cpX1<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  cpY1<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  cpX2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  cpY2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  toX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  toY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Curve</span> <span class="token keyword">extends</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> <span class="token keyword">type</span><span class="token operator">:</span> ShapeType<span class="token punctuation">.</span>curve<span class="token punctuation">;</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  cpX1<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  cpY1<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  cpX2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  cpY2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  toX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  toY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="positionable-transformable"><a class="header-anchor" href="#positionable-transformable">#</a> Positionable &amp; Transformable</h3><p>These APIs allows to get and update the position of the corresponding entity:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">AABB</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span>minX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> minY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> maxX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> maxY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Positionable</span> <span class="token punctuation">{</span>\n  aabb<span class="token operator">:</span> <span class="token constant">AABB</span><span class="token punctuation">;</span>\n  center<span class="token operator">:</span> Point<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Transformable</span> <span class="token punctuation">{</span>\n  <span class="token function">move</span><span class="token punctuation">(</span>position<span class="token operator">:</span> Point<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">translate</span><span class="token punctuation">(</span>dx<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> dy<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * <span class="token keyword">@param</span> <span class="token parameter">angle</span> in degree, clockwise\n   * <span class="token keyword">@param</span> <span class="token parameter">origin</span>\n   */</span>\n  <span class="token function">rotate</span><span class="token punctuation">(</span>angle<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> origin<span class="token operator">?</span><span class="token operator">:</span> Point<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">scale</span><span class="token punctuation">(</span>ds<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> origin<span class="token operator">?</span><span class="token operator">:</span> Point<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="ui"><a class="header-anchor" href="#ui">#</a> UI</h2><p>The UI is the only component connected to a DOM element, listening to events. It has the following interface:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">UI</span></span> <span class="token keyword">extends</span> <span class="token class-name">EventHandler<span class="token operator">&lt;</span>UIHandlerEvents<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token function">connect</span><span class="token punctuation">(</span>el<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>The <code>camera</code> and the <code>picker</code> listen to the UI events. Disconnecting the UI will make them not reactive to user interactions.</p><h3 id="events-1"><a class="header-anchor" href="#events-1">#</a> Events</h3><ul><li>&quot;click&quot;, payload: { canvasPosition, keys }</li><li>&quot;right-click&quot;, payload: { canvasPosition, keys }</li><li>&quot;move&quot;, payload: { canvasPosition, keys }</li><li>&quot;drag&quot;, payload: { dx, dy, keys }</li><li>&quot;scroll&quot;, payload: { canvasPosition, dx, dy, keys }</li><li>&quot;exit&quot;, no payload, when the mouse leave <code>el</code>.</li></ul><h2 id="camera"><a class="header-anchor" href="#camera">#</a> Camera</h2><p>The camera is binded on the mouse events. It has the following interface:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**\n * A camera allows to see the world. Two coordinate systems can be manipulated using it:\n * - the world coordinates, mentionned as `position`.\n * - the canvas coordinates, mentionned as `canvasPosition`.\n *\n * A camera emits events:\n * - &quot;update&quot;, payload <span class="token punctuation">{</span> MatrixExtended <span class="token punctuation">}</span> : the camera transform. Emited when the camera is updated.\n *\n * To express the zoom level, the camera has two units:\n * - zoom, expressed in percentages, as 100 times the scale.\n * - scale ]0,+Infitiy[.\n *\n */</span>\n<span class="token keyword">interface</span> <span class="token class-name">Camera</span>\n  <span class="token keyword">extends</span> <span class="token class-name">Transformable</span><span class="token punctuation">,</span>\n    Readonly<span class="token operator">&lt;</span>EventHandler<span class="token operator">&lt;</span><span class="token punctuation">{</span> update<span class="token operator">:</span> PIXITransform <span class="token punctuation">}</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">fitView</span><span class="token punctuation">(</span>\n    target<span class="token operator">:</span> Scene <span class="token operator">|</span> Scene<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> Model <span class="token operator">|</span> Model<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> SceneObject <span class="token operator">|</span> SceneObject<span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  controller<span class="token operator">:</span> CameraController<span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * <span class="token keyword">@param</span> <span class="token parameter">factor</span> ]-Infinity, +Infinity[\n   * <span class="token keyword">@param</span> <span class="token parameter">origin</span> the zoom transform center.\n   */</span>\n  <span class="token function">zoomIn</span><span class="token punctuation">(</span>factor<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> origin<span class="token operator">?</span><span class="token operator">:</span> Point<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * <span class="token keyword">@param</span> <span class="token parameter">factor</span> ]-Infinity, +Infinity[\n   * <span class="token keyword">@param</span> <span class="token parameter">origin</span> the zoom transform center.\n   */</span>\n  <span class="token function">zoomOut</span><span class="token punctuation">(</span>factor<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> origin<span class="token operator">?</span><span class="token operator">:</span> Point<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * <span class="token keyword">@param</span> <span class="token parameter">angle</span> in degree clockwise.\n   * <span class="token keyword">@param</span> <span class="token parameter">origin</span> the rotation transform center.\n   */</span>\n  transform<span class="token operator">:</span> PIXIMatrix<span class="token punctuation">;</span>\n  position<span class="token operator">:</span> Point<span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * <span class="token keyword">@returns</span> <span class="token punctuation">{</span> number <span class="token punctuation">}</span> the camera rotation angle in degree clockwise.\n   */</span>\n  rotation<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * <span class="token keyword">@returns</span> <span class="token punctuation">{</span> number <span class="token punctuation">}</span> ]-Infinity, +Infinity[\n   */</span>\n  <span class="token function">getScale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * <span class="token keyword">@returns</span> <span class="token punctuation">{</span> number <span class="token punctuation">}</span> ]0, +Infinity[\n   */</span>\n  zoom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * Returns the position of the given canvas position.\n   */</span>\n  <span class="token function">getPosition</span><span class="token punctuation">(</span>canvasPosition<span class="token operator">:</span> Point<span class="token punctuation">)</span><span class="token operator">:</span> Point<span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * Returns the canvas position of the given position.\n   */</span>\n  <span class="token function">getCanvasPosition</span><span class="token punctuation">(</span>position<span class="token operator">:</span> Point<span class="token punctuation">)</span><span class="token operator">:</span> Point<span class="token punctuation">;</span>\n  <span class="token function">getViewpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Viewpoint<span class="token punctuation">;</span>\n  <span class="token function">setViewpoint</span><span class="token punctuation">(</span>viewpoint<span class="token operator">:</span> Viewpoint<span class="token punctuation">)</span><span class="token operator">:</span> Viewpoint<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Viewpoint</span> <span class="token punctuation">{</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * degree clockwise\n   */</span>\n  rotation<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * ]-Infinity, +Infinity[\n   */</span>\n  zoom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div><p>It is possible to customise the camera behaviour by changing the properties of the <code>camera.controller</code> that has the following interface:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">CameraController</span> <span class="token punctuation">{</span>\n  translatable<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  rotatable<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  scallable<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>All properties are <code>true</code> by default.</p><h2 id="picker"><a class="header-anchor" href="#picker">#</a> Picker</h2><p>The picker allows to get objects under the mouse pointer.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Picker</span> <span class="token keyword">extends</span> <span class="token class-name">Readonly<span class="token operator">&lt;</span>EventHandler<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token function">pick</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> SceneObject <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>You may be mainly interseted by the picker events:</p><ul><li>&quot;pick&quot;, payload : { object, position, keys, rightClick: boolean }</li><li>&quot;pick-nothing&quot;, payload: { position, keys, rightClick: boolean }</li><li>&quot;hover-surface&quot;, payload: { object, position }</li><li>&quot;hover&quot;, payload: { object, position }</li><li>&quot;hover-out&quot;, payload: { object, position }</li><li>&quot;hover-off&quot;, payload: { position }</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>viewer<span class="token punctuation">.</span>camera<span class="token punctuation">.</span>controller<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;pick&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> object <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  object<span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token operator">!</span>object<span class="token punctuation">.</span>selected<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="snapper"><a class="header-anchor" href="#snapper">#</a> Snapper</h2><p>The snapper allows to get a line vertex or edge position close to the given canvas position:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Snapper</span> <span class="token punctuation">{</span>\n  <span class="token function">getSnap</span><span class="token punctuation">(</span>canvasPosition<span class="token operator">:</span> Point<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> SnapOptions<span class="token punctuation">)</span><span class="token operator">:</span> Point<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">SnapOptions</span> <span class="token punctuation">{</span>\n  canvasDistance<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// default 20</span>\n  snapVertices<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// default true</span>\n  snapLines<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// default true</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Example to move a object close to another with the snap:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> object <span class="token operator">=</span> viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">/* scene object data */</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nviewer<span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;move&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> canvasPosition <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> point <span class="token operator">=</span> viewer<span class="token punctuation">.</span>snapper<span class="token punctuation">.</span><span class="token function">getSnap</span><span class="token punctuation">(</span>canvasPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    object<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>point <span class="token operator">??</span> viewer<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span>canvasPosition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="settings"><a class="header-anchor" href="#settings">#</a> Settings</h2><p>Settings are predefined values/keys that define the 2D Engine behaviour. It has the following interface:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Settings</span> <span class="token punctuation">{</span>\n  rotateKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">// default &quot;shift&quot;</span>\n  scaleSpeed<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// default 0.002</span>\n  rotateSpeed<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// default 0.1</span>\n  maxScale<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// default 1000</span>\n  minScale<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// default 0.001</span>\n  fitViewRatio<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// default 0.9</span>\n  snapMargin<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// default 1</span>\n  curves<span class="token operator">:</span> <span class="token punctuation">{</span>\n    adaptive<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n    maxLength<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n    maxSegments<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n    minSegments<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="ticker"><a class="header-anchor" href="#ticker">#</a> Ticker</h2><p>Use <code>viewer.ticker.start/stop()</code> to start or stop the rendering.</p><p>Use <code>viewer.ticker.add/addOnce(name: string, callBack: Function)</code> to schedule a callback on the next tick. The callback will be called with <code>dt</code>, the delta time since the next tick. WARNING: adding many tasks with the same name will overide the previous tasks and only the last added will be called on the next tick. This can be used to do not overdue a callback that must be done only once per tick.</p><h2 id="renderer"><a class="header-anchor" href="#renderer">#</a> Renderer</h2><p>Renderer emits events you can use for addons:</p><ul><li>&quot;resize&quot;, payload: { dx: number, dy: number }. Emited when the renderer resizes.</li><li>&quot;pre-draw&quot;. Emited before the draw phase.</li><li>&quot;post-draw&quot;. Emited after the draw phase.</li></ul><h2 id="vector2dutils"><a class="header-anchor" href="#vector2dutils">#</a> Vector2DUtils</h2><p>It exposes some methods to work with 2D vectors:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Vector2DUtils</span> <span class="token punctuation">{</span>\n  <span class="token function">distance</span><span class="token punctuation">(</span>v1<span class="token operator">:</span> Vector2D<span class="token punctuation">,</span> v2<span class="token operator">:</span> Vector2D<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token function">sub</span><span class="token punctuation">(</span>v1<span class="token operator">:</span> Vector2D<span class="token punctuation">,</span> v2<span class="token operator">:</span> Vector2D<span class="token punctuation">)</span><span class="token operator">:</span> Vector2D<span class="token punctuation">;</span>\n  <span class="token function">add</span><span class="token punctuation">(</span>v1<span class="token operator">:</span> Vector2D<span class="token punctuation">,</span> v2<span class="token operator">:</span> Vector2D<span class="token punctuation">)</span><span class="token operator">:</span> Vector2D<span class="token punctuation">;</span>\n  <span class="token function">normalize</span><span class="token punctuation">(</span>v<span class="token operator">:</span> Vector2D<span class="token punctuation">)</span><span class="token operator">:</span> Vector2D<span class="token punctuation">;</span>\n  <span class="token function">length</span><span class="token punctuation">(</span>v<span class="token operator">:</span> Vector2D<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token function">dot</span><span class="token punctuation">(</span>v1<span class="token operator">:</span> Vector2D<span class="token punctuation">,</span> v2<span class="token operator">:</span> Vector2D<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token function">cross</span><span class="token punctuation">(</span>v1<span class="token operator">:</span> Vector2D<span class="token punctuation">,</span> v2<span class="token operator">:</span> Vector2D<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token function">rotateAround</span><span class="token punctuation">(</span>v<span class="token operator">:</span> Vector2D<span class="token punctuation">,</span> center<span class="token operator">:</span> Vector2D<span class="token punctuation">,</span> angle<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Vector2D<span class="token punctuation">;</span>\n  <span class="token function">angle</span><span class="token punctuation">(</span>v1<span class="token operator">:</span> Vector2D<span class="token punctuation">,</span> v2<span class="token operator">:</span> Vector2D<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Angles are expressed in radians in <code>Vector2DUtils</code>.</p></div>',46),x={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,(0,e.Wm)("p",null,[t,o,(0,e.Wm)("a",c,[l,(0,e.Wm)(a)]),r]),u,(0,e.Wm)("img",{src:n.$withBase("/assets/img/wallTextureRaw.png"),alt:"wall texture raw",width:"400",height:"300"},null,8,["src"]),i,(0,e.Wm)("img",{src:n.$withBase("/assets/img/wallTextureRotated.png"),alt:"wall texture rotated",width:"400",height:"300"},null,8,["src"]),k,(0,e.Wm)("img",{src:n.$withBase("/assets/img/pathAPI_with.png"),alt:"with path API",height:"300"},null,8,["src"]),b,(0,e.Wm)("img",{src:n.$withBase("/assets/img/pathAPI_without.png"),alt:"without path API",height:"300"},null,8,["src"]),d,(0,e.Wm)("div",m,[h,(0,e.Wm)("p",null,[y,(0,e.Wm)("a",g,[v,(0,e.Wm)(a)]),f])]),w],64)}}}}]);